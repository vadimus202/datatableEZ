% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/datatable_EZ.R
\name{datatable_EZ}
\alias{datatable_EZ}
\title{A friendly version of \code{DT::datatable()}}
\usage{
datatable_EZ(data, colnames, filter = "none", caption = NULL,
  rownames = FALSE, class = "compact display", pageLength = 10,
  lengthMenu = c(5, 10, 25, 50, 100, 500), searchHighlight = TRUE,
  dom = "lftip", columnDefs = list(), ordering = TRUE, order = list(),
  options = list(), ...)
}
\arguments{
\item{data}{a data object (either a matrix or a data frame)}

\item{colnames}{if missing, the column names of the data; otherwise it can be
an unnamed character vector of names you want to show in the table header
instead of the default data column names; alternatively, you can provide a
\emph{named} numeric or character vector of the form \code{'newName1' = i1,
'newName2' = i2} or \code{c('newName1' = 'oldName1', 'newName2' =
'oldName2', ...)}, where \code{newName} is the new name you want to show in
the table, and \code{i} or \code{oldName} is the index of the current
column name}

\item{filter}{whether/where to use column filters; \code{none}: no filters;
\code{bottom/top}: put column filters at the bottom/top of the table; range
sliders are used to filter numeric/date/time columns, select lists are used
for factor columns, and text input boxes are used for character columns; if
you want more control over the styles of filters, you can provide a list to
this argument of the form \code{list(position = 'top', clear = TRUE, plain
= FALSE)}, where \code{clear} indicates whether you want the clear buttons
in the input boxes, and \code{plain} means if you want to use Bootstrap
form styles or plain text input styles for the text input boxes}

\item{caption}{the table caption; a character vector or a tag object}

\item{rownames}{\code{TRUE} (show row names) or \code{FALSE} (hide row names)
or a character vector of row names; by default, the row names are not shown}

\item{class}{the CSS class(es) of the table, defaults to \code{"compact
display"}; see \url{http://datatables.net/manual/styling/classes}}

\item{pageLength}{a number of records to be displayed per page when the table
loads}

\item{lengthMenu}{a numeric vector of page length drop-down options}

\item{searchHighlight}{a logical; should search expression be highlighted?
Defaults to \code{TRUE}}

\item{dom}{By default, the table has these DOM elements: the length-(l) menu,
the filtering-(f) input box, the table-(t), the information-(i) summary,
and the pagination-(p) control. You can choose to display a subset of these
elements. See \url{https://datatables.net/reference/option/dom} for
details.}

\item{columnDefs}{list of column definitions; see Examples.}

\item{ordering}{logical; should the table be sortable?}

\item{order}{list of row sorting options; see examples.}

\item{options}{a \code{list()} of all other options.}

\item{...}{all other arguments passed to \code{DT::datatable()}}
}
\value{
\code{DT::datatable} object
}
\description{
This is a wrapper around \code{DT::datatable()} with more convenient
defaults. Also, most common elements of \code{options()} argument are moved
to direct arguments list for this function. This removes to necessity to pass
on long options list (which is not well documented in the DT package
documentation). It also makes them avalable for auto-complete in RStudio.
}
\examples{
library(DT)

# original DT::datatable
datatable(iris)
# no rownumbers by default
datatable_EZ(iris)

datatable_EZ(
    iris,
    # DOM elements (table only)
    dom="t",
    # column definitions
    columnDefs = list(list(width = '50px', targets = c(1, 3))),
    # Row Sorting
    order = list(list(0, 'desc'), list(1, 'asc'))
)

# disable sorting and searching by user ("static version")
datatable_EZ(iris, ordering = FALSE, dom = "t")


# Pagination
datatable_EZ(mtcars, pageLength = 3, lengthMenu = c(3,5,10))

}
\references{
See \url{http://rstudio.github.io/DT} for the full documentation.
}
\seealso{
\code{\link[DT]{datatable}}, \code{\link{format_databars}}
}
